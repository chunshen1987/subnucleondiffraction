Subnucleondiffraction code
H. Mäntysaari and B. Schenke
<mantysaari@bnl.gov>, 2015-2018

References:
H. Mäntysaari, B. Schenke
Phys.Rev. D94 (2016) no.3, 034042 
Phys.Rev.Lett. 117 (2016) no.5, 052301

This code requires my "amplitudelib" helper library
Check that you have downloaded it from git and succesfully
compiled (using CMake). The produced libraries should be
found in the directory
../amplitudelib_v2/build/lib/

How to compile:

mkdir build
cd build
cmake ..
make

Code requires GSL, and C++ and Fortran compilers. CMake takes care of
finding the correct compiler flags etc.

Part of this code package is
libColorDipole (IPsat parametrization from Phys.Rev. D87 (2013) no.3, 034002)
CMake compiles that, too.


How to run:
See ./build/bin/subnucleondiffraction -help
Examples
GSL_RNG_SEED=1 ./build/bin/subnucleondiffraction -dipole 1 ipsatproton 3.3 0.7 -real -Q2 0 -W 75 -mcintpoints 1e5
Calculates diffractive scattering amplitude (real part, imaginary part: use -imag instead of -real)
Q2 and W are clear, and 10^5 points are used in (adaptive) Monte Carlo integration

Using a heavy nucleus instead of proton, replace 1 -> 197 (Au) or any other A>3, and Woods-Saxon
is used.

Random seed is set by GSL_RNG_SEED enviromental variable. One MUST use the same RNG_SEED when calculating real and 
imaginary parts!

Round proton is "ipsatproton 0 4"
Q_s fluctautoins for constituent quarks are set as:
-qsfluct 0.5 -qsfluctshape quarks 

IP-Glasma input (file containing N^2 wilson lines) is used as follows:
-dipole 1 ipglasma FILENAME
The step size in fm is set in file src/ipglasma.cpp (double step=0.005; corresponds to step size 0.005fm)


In order to calculate coherent and incoherent cross sections, calculate real and imaginary parts to files
somedirectory/real/spectra_0, somedirectory/real/spectra_1, somedirectory/real/spectra_2
and 
somedirectory/imag/spectra_0, somedirectory/imag/spectra_2, somedirecotyr/imag_spectra_3
and so on (last number corresponds to a given configuration)

Then coherent cross section is calculated as
python tools/spectra.py -dir somedirectory/ -coherent
and incohernet cross section as
python tools/spectra.py -dir somedirectory/ -incoherent

The output of coherent cross section is
t dsigma/dt [GeV^-4]  maximum_dsigma/dt   minimum_dsigma_dt  statistical_uncertainty
and for the incoherent xs
t dsigma/dt [GeV^-4]  statistical_uncertainty



In order to calculate total gamma-p (or gamma-A) cross section, one can calulate F2 as follows
GSL_RNG_SEED=1 ./diffraction -dipole 1 ipsatproton 0 4 -F2 Qsqr xbj
The output is
x   Q^2   F_2,light  F_2,charm   F_2,total   F_L,light  F_L,charm   F_L,tot 
